import type { OutputTargetSolid, PackageJSON } from './types';
import type { CompilerCtx, ComponentCompilerMeta, Config, CopyResults } from '@stencil/core/internal';
import PartialExcept from "./types/PartialExcept";
export declare const GENERATED_DTS = "components.d.ts";
export declare const getFilteredComponents: (excludeComponents: string[], components: readonly ComponentCompilerMeta[]) => ComponentCompilerMeta[];
export declare const getPathToCorePackageLoader: (config: Config, outputTarget: OutputTargetSolid) => string;
export declare function createComponentDefinition(componentCompilerMeta: PartialExcept<ComponentCompilerMeta, 'tagName'>, includeImportCustomElements?: boolean): readonly string[];
export declare const generateProxies: (config: Config, components: ComponentCompilerMeta[], pkgData: PackageJSON, outputTarget: OutputTargetSolid, rootDir: string) => string;
export declare const copyResources: (config: Config, outputTarget: OutputTargetSolid) => Promise<CopyResults>;
export declare function solidProxyOutput(config: Config, compilerCtx: CompilerCtx, outputTarget: OutputTargetSolid, components: ComponentCompilerMeta[]): Promise<void>;
